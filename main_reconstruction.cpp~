#include "ReadEvent.h"
#include "ReadDetector.h"
#include "reconstruction.h"
#include <fstream>
#include <string>


using namespace std;

void main_reconstruction() {
  ifstream event_file("events.dat");
  ifstream detector_file("measures.dat");
  string str1, str2;

  // Event variables and measures
  int ev_no1, dec_no, ev_no; //event and decay number. ev_no1 needed to "synchronize" event_file with detector_file
  double K_z, K_p, pi_plus_modp, pi_plus_theta, pi_plus_phi, pi_min_modp, pi_min_theta, pi_min_phi, x1_plus, y1_plus, z1_plus, x1_min, y1_min, z1_min;
  int imax; //Total number of events

  //Skip first 5 lines and get imax
  getline(event_file,str1);
  getline(detector_file,str2);
  if (str1 != str2) {cout << "ERROR: Different file source" << endl; cin.get();} // Check if detector file was generated by the same event file we are using now
  else {
    getline(event_file,str1);
    getline(detector_file,str2);
    if (str1 != str2) {cout << "ERROR: Different file source" << endl; cin.get();}
    else {
      str1 = str1.substr(10);
      imax = atoi(str1.c_str());
    getline(event_file,str1);
    getline(detector_file,str2);
    getline(event_file,str1);
    getline(detector_file,str2);
    getline(event_file,str1);
    getline(detector_file,str2);      
    }
  }

  ReadEvent(event_file,ev_no,K_z,K_p, pi_plus_modp, pi_plus_theta, pi_plus_phi, pi_min_modp, pi_min_theta, pi_min_phi);
  ReadDetector(detector_file,dec_no, ev_no1,x1_plus, y1_plus, z1_plus, x1_min, y1_min, z1_min);



}
